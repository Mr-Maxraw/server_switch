{"version":3,"sources":["js/Views/ChangeServ.js","js/Views/Home.js","js/Views/Instructions.js","Main.js","index.js"],"names":["Component","Home","props","state","ServInfo","key","items","SiteName","ServName","popupVisible","popupInfo","tmp","values","refs","setListRef","element","onChangeServClick","bind","handleChange","hidePopup","tmpValue","args","this","setState","itemData","instance","reload","res","reord1","i","splice","indexOf","group","index","t","length","push","data","value","Servers","getServerList","style","textAlign","ref","dataSource","grouped","collapsibleGroups","hoverStateEnabled","activeStateEnabled","focusStateEnabled","onGroupRendered","e","console","log","groupData","component","collapseGroup","groupIndex","onItemClick","itemRender","height","visible","onHiding","dragEnabled","closeOnOutsideClick","showCloseButton","showTitle","title","fullScreen","onValueChanged","text","onClick","alignItems","id","startValue","endValue","defaultValues","width","indent","format","type","precision","customizeText","valueText","Instructions","Main","isLoading","showIndicator","message","hashType","from","to","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de13b978.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass ChangeServ extends Component{\r\n    componentDidMount() {\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangeServ;","import React, { Component } from 'react'\r\n\r\n//Pages\r\nimport ChangeServ from './ChangeServ'\r\n\r\n//Dx\r\nimport {\r\n    List,\r\n    Button,\r\n    SelectBox,\r\n} from 'devextreme-react'\r\nimport { Popup } from 'devextreme-react/popup';\r\nimport { \r\n    BarGauge, \r\n    Label, \r\n    Size\r\n} from 'devextreme-react/bar-gauge';\r\n\r\n//import '.../css/Home.scss'\r\n\r\nclass Home extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //sample data\r\n        this.state = {\r\n            ServInfo: [{\r\n                key: 'Serv 1',\r\n                items: [{SiteName: 'Qwe', ServName: 'Serv 1'}, {SiteName: 'Asd', ServName: 'Serv 1'}]\r\n            }, {\r\n                key: 'Serv 2',\r\n                items: [{SiteName: 'Qwer', ServName: 'Serv 2'}, {SiteName: 'Asdf', ServName: 'Serv 2'}]\r\n            }, {\r\n                key: 'Serv 3',\r\n                items: [{SiteName: 'Qwert', ServName: 'Serv 3'}, {SiteName: 'Asdfg', ServName: 'Serv 3'}]\r\n            }],\r\n            popupVisible: false,\r\n            popupInfo: {},\r\n            tmp: {},\r\n            values: [50],\r\n        }\r\n\r\n        this.refs = null\r\n\r\n        this.setListRef = element => {\r\n            this.refs = element\r\n        }\r\n\r\n        this.onChangeServClick = this.onChangeServClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.hidePopup = this.hidePopup.bind(this);\r\n        this.tmpValue = this.tmpValue.bind(this);\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Api calls here\r\n    }\r\n\r\n    onChangeServClick(args) {\r\n        //server change handle\r\n        this.setState(() => {\r\n            return {\r\n                popupVisible: true,\r\n                popupInfo: args.itemData,\r\n            }\r\n        })\r\n    }\r\n\r\n    hidePopup() {\r\n        this.setState(() => {\r\n            this.refs.instance.reload()\r\n            return {popupVisible: false}\r\n        })\r\n    }\r\n\r\n    handleChange() {\r\n        this.setState((state) => {\r\n            var res = state.ServInfo;\r\n            var reord1 = {}\r\n            var reord2 = {}\r\n            for (var i in res) {\r\n                if (res[i].key == state.popupInfo.ServName) {\r\n                    res[i].items.splice(res[i].items.indexOf(state.popupInfo), 1)\r\n                    reord1.group = i;\r\n                    reord1.index = res[i].items.indexOf(state.popupInfo);\r\n                }\r\n            }\r\n            for (var i in res) {\r\n                if (res[i].key == state.tmp) {\r\n                    var t = state.popupInfo;\r\n                    t.ServName = state.tmp;\r\n                    t.key = state.tmp;\r\n                    reord2 = i;\r\n                    reord2 = res[i].items.length\r\n                    res[i].items.push(t);\r\n                }\r\n            }\r\n            // console.log(res)\r\n            //this.refs.reorderItem(reord1,reord2);\r\n            return {ServInfo: res}\r\n        })\r\n    }\r\n\r\n    getServerList(data) {\r\n        var res = [];\r\n        for (var i in data) {\r\n            res.push(data[i].key)\r\n        }\r\n        return res;\r\n    }\r\n\r\n    tmpValue(args) {\r\n        this.setState({tmp: args.value})\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ServInfo,\r\n            popupVisible,\r\n            popupInfo,\r\n            values\r\n        } = this.state\r\n\r\n        const format = {\r\n            type: 'fixedPoint',\r\n            precision: 1\r\n        };\r\n\r\n        const Servers = this.getServerList(ServInfo)\r\n\r\n        return (\r\n            <>\r\n                <div style= {{textAlign: 'center'}}>Нажмите на сайт для подробной информации</div>\r\n                <List\r\n                    ref={this.setListRef}\r\n                    dataSource={ServInfo}\r\n                    grouped={true}\r\n                    collapsibleGroups={true}\r\n                    hoverStateEnabled={false}\r\n                    activeStateEnabled={false}\r\n                    focusStateEnabled={false}\r\n                    onGroupRendered={(e) => {\r\n                        console.log(e.groupData)\r\n                        e.component.collapseGroup(e.groupIndex)}}\r\n                    onItemClick={this.onChangeServClick}\r\n                    itemRender={(e) => {\r\n                        return (\r\n                            <>\r\n                                <p>{e.SiteName}</p>\r\n\r\n                                {/* <Button\r\n                                    onClick={this.onChangeServClick}\r\n                                    text={'Переместить сервер'}\r\n                                /> */}\r\n                            </>\r\n                        )\r\n                    }}\r\n                />\r\n                <Popup\r\n                    height= '100%'\r\n                    visible={popupVisible}\r\n                    onHiding={this.hidePopup}\r\n                    dragEnabled={false}\r\n                    closeOnOutsideClick={true}\r\n                    showCloseButton={true}\r\n                    showTitle={true}\r\n                    title={'Информация по ' + popupInfo.SiteName}\r\n                    fullScreen={true}\r\n                >\r\n                    <div>Текущий сервер: {popupInfo.ServName}</div>\r\n                    <SelectBox\r\n                        dataSource= {Servers}\r\n                        onValueChanged={this.tmpValue}\r\n                    />\r\n                    <Button\r\n                        text={'Поменять сервер'}\r\n                        onClick={this.handleChange}\r\n                    />\r\n                    <div style={{alignItems: 'center'}}>\r\n                        <BarGauge\r\n                            id=\"barGauge\"\r\n                            startValue={0}\r\n                            endValue={100}\r\n                            defaultValues={values}\r\n                        >\r\n                            <Size\r\n                                height={300}\r\n                                width={300}\r\n                            />\r\n                            <Label  indent={30} format={format} customizeText={this.customizeText} />\r\n                        </BarGauge>\r\n                    </div>\r\n                </Popup>\r\n            </>\r\n        )\r\n    }\r\n\r\n    customizeText({ valueText }) {\r\n        return `${valueText} %`;\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\n\r\nclass Instructions extends Component{\r\n    componentDidMount() {\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Instructions;","//React, router\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    HashRouter,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\n//Dx\r\nimport { LoadPanel } from 'devextreme-react'\r\n\r\n//Pages\r\nimport Home from './js/Views/Home.js'\r\nimport Instructions from './js/Views/Instructions.js'\r\n\r\nclass Main extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            isLoading\r\n        } = this.state\r\n\r\n        return (\r\n            <>\r\n                <LoadPanel\r\n                    showIndicator = {true}\r\n                    message={'Loading...'}\r\n                    visible={isLoading}\r\n                />\r\n                <HashRouter hashType='noslash'>\r\n                    <Redirect from='/' to='/Home' exact/>\r\n                    <Route path={'/Home'} component={Home}/>\r\n                    <Route path={'/Instructions'} component={Instructions}/>\r\n                </HashRouter>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n    \r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Main from \"./Main\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\n\r\nReactDOM.render(\r\n    <Main />,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}